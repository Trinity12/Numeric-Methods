#simpson meyhod
#!/usr/bin/env python3
from math import sqrt
from math import sin

def simpson(f, a, b, n):
    """Approximates the definite integral of f from a to b by the
    composite Simpson's rule, using n subintervals (with n even)"""
 
    if n % 2:
        raise ValueError("n must be even (received n=%d)" % n)
 
    h = (b - a) / n
    s = f(a) + f(b)
 
    for i in range(1, n, 2):
        s += 4 * f(a + i * h)
    for i in range(2, n-1, 2):
        s += 2 * f(a + i * h)
 
    return s * h / 3

def f(x):
    return sqrt(x) * sin((3.14 * x) / 3.0)**2
 
# Demonstrate that the method is exact for polynomials up to 3rd order
print(simpson(f, 0.0, 3, 1000))       # 2500.0
